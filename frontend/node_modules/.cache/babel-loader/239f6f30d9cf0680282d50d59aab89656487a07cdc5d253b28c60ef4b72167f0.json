{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BAPS\\\\OneDrive\\\\Desktop\\\\huffman-compressor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  const handleUpload = async type => {\n    if (!file) {\n      alert(\"Please upload a file first!\");\n      return;\n    }\n    const fileName = file.name;\n    const fileExtension = fileName.split('.').pop().toLowerCase();\n    if (type === \"compress\" && fileExtension !== \"txt\") {\n      alert(\"Please select a .txt file for compression!\");\n      return;\n    }\n    if (type === \"decompress\" && fileExtension !== \"bin\") {\n      alert(\"Please select a .bin file for decompression!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"originalName\", file.name);\n    const endpoint = type === \"compress\" ? \"compress\" : \"decompress\";\n    const response = await axios.post(`http://localhost:5000/${endpoint}`, formData, {\n      responseType: \"blob\"\n    });\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    setDownloadUrl(url);\n  };\n  const getDownloadFileName = () => {\n    if (!file) return '';\n    const originalName = file.name;\n    const baseName = originalName.substring(0, originalName.lastIndexOf('.'));\n    return file.name.endsWith('.bin') ? `${baseName}.txt` : `${baseName}.bin`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCE6 File Compressor & Decompressor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-inputs\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        accept: \".txt,.bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpload(\"compress\"),\n        children: \"Compress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpload(\"decompress\"),\n        children: \"Decompress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadUrl,\n        download: getDownloadFileName(),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oxcq9fZvjG8SEaJXGcRSabMfKz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","downloadUrl","setDownloadUrl","handleUpload","type","alert","fileName","name","fileExtension","split","pop","toLowerCase","formData","FormData","append","endpoint","response","post","responseType","url","window","URL","createObjectURL","Blob","data","getDownloadFileName","originalName","baseName","substring","lastIndexOf","endsWith","className","children","_jsxFileName","lineNumber","columnNumber","onChange","e","target","files","accept","onClick","href","download","_c","$RefreshReg$"],"sources":["C:/Users/BAPS/OneDrive/Desktop/huffman-compressor/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n\n  const handleUpload = async (type) => {\n    if (!file) {\n      alert(\"Please upload a file first!\");\n      return;\n    }\n\n    const fileName = file.name;\n    const fileExtension = fileName.split('.').pop().toLowerCase();\n\n    if (type === \"compress\" && fileExtension !== \"txt\") {\n      alert(\"Please select a .txt file for compression!\");\n      return;\n    }\n\n    if (type === \"decompress\" && fileExtension !== \"bin\") {\n      alert(\"Please select a .bin file for decompression!\");\n      return;\n    }\n    \n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"originalName\", file.name);\n\n    const endpoint = type === \"compress\" ? \"compress\" : \"decompress\";\n\n    const response = await axios.post(\n      `http://localhost:5000/${endpoint}`,\n      formData,\n      {\n        responseType: \"blob\",\n      }\n    );\n\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    setDownloadUrl(url);\n  };\n\n  const getDownloadFileName = () => {\n    if (!file) return '';\n    const originalName = file.name;\n    const baseName = originalName.substring(0, originalName.lastIndexOf('.'));\n    return file.name.endsWith('.bin') ? `${baseName}.txt` : `${baseName}.bin`;\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>ðŸ“¦ File Compressor & Decompressor</h1>\n      <div className=\"file-inputs\">\n        <input\n          type=\"file\"\n          onChange={(e) => setFile(e.target.files[0])}\n          accept=\".txt,.bin\"\n        />\n      </div>\n      <div className=\"buttons\">\n        <button onClick={() => handleUpload(\"compress\")}>Compress</button>\n        <button onClick={() => handleUpload(\"decompress\")}>Decompress</button>\n        {downloadUrl && (\n          <a href={downloadUrl} download={getDownloadFileName()}>\n            <button>Download</button>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}